export interface IRequestHeaders {
	[key: string]: string;
}

export enum XboxLiveDomains {
	Screenshots = 'https://screenshotsmetadata.xboxlive.com/',
	Gameclips = 'https://gameclipsmetadata.xboxlive.com/',
	Profile = 'https://profile.xboxlive.com/'
}

export interface ICallProperties {
	method?: HTTPMethod;
	payload?: any;
	qs?: any;
}

export interface IAuthorization {
	userHash: string | number;
	XSTSToken: string;
}

export type PlayerSettings = (
	| 'GameDisplayPicRaw'
	| 'Gamerscore'
	| 'Gamertag'
	| 'AccountTier'
	| 'XboxOneRep'
	| 'PreferredColor'
	| 'RealName'
	| 'Bio'
	| 'Location')[];

export interface IMediaThumbnail {
	uri: string;
	fileSize: 0;
	thumbnailType: 'Small' | 'Large';
}

export interface IMediaUri {
	uri: string;
	fileSize: number;
	uriType: 'Download';
	expiration: string;
}

export interface GameclipNode {
	gameClipId: string;
	state: string;
	datePublished: string;
	dateRecorded: string;
	lastModified: string;
	userCaption: string;
	type: 'UserGenerated' | 'AutoGenerated';
	durationInSeconds: number;
	scid: string;
	titleId: number;
	rating: number;
	ratingCount: number;
	views: number;
	titleData: string;
	systemProperties: string;
	savedByUser: boolean;
	achievementId: string;
	greatestMomentId: string | null;
	thumbnails: IMediaThumbnail[];
	gameClipUris: IMediaUri[];
	xuid: string;
	clipName: string;
	titleName: string;
	gameClipLocale: string;
	clipContentAttributes: string;
	deviceType: string;
	commentCount: number;
	likeCount: number;
	shareCount: number;
	partialViews: number;
}

export interface ScreenshotNode {
	screenshotId: string;
	resolutionHeight: number;
	resolutionWidth: number;
	state: string;
	datePublished: string;
	dateTaken: string;
	lastModified: string;
	userCaption: string;
	type: 'UserGenerated' | 'AutoGenerated';
	scid: string;
	titleId: number;
	rating: number;
	ratingCount: number;
	views: number;
	titleData: string;
	systemProperties: string;
	savedByUser: boolean;
	achievementId: string;
	greatestMomentId: string | null;
	thumbnails: IMediaThumbnail[];
	screenshotUris: IMediaUri[];
	xuid: string;
	screenshotName: string;
	titleName: string;
	screenshotLocale: string;
	screenshotContentAttributes: string;
	deviceType: string;
}

export interface IPlayerScreenshotsResponse {
	screenshots: ScreenshotNode[];
	pagingInfo: {
		continuationToken: string | null;
	};
}

export interface IPlayerGameclipsResponse {
	gameClips: GameclipNode[];
	pagingInfo: {
		continuationToken: string | null;
	};
}

export type PlayerSettingsResponse = { id: string; value: string }[];
export type PlayerXUIDResponse = string;

export type PlayerGamertag = string;
export type HTTPMethod = 'GET' | 'PATCH' | 'POST' | 'PUT' | 'DELETE';
